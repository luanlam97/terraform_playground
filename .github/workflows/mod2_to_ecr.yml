



name: push-to-ecr-2
on:
  push

env:
  AWS_ACESS_KEY_ID: ${{ secrets.AWS_ACCES_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_NAME : ${{ secrets.AWS_BUCKET_NAME }}
  AWS_REGION : ${{ secrets.AWS_REGION }}
  
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:

  concurrency-2:
    concurrency:
      group: ${{github.repository}}-concurrency-for-job
      cancel-in-progress: false
 
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          python-version: 3.9
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          ECR_ALIAS : ${{secrets.ECR_ALIAS}}
        run: |
          # Build a docker container and push it to ECR

          echo "building version mod2  ..."
          docker build -f mod2/Dockerfile_mod2 -t $ECR_REGISTRY/$ECR_REPOSITORY:mod2_latest .
          echo "pushing image to ECR ..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:mod2_latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:mod2_latest "

          

  